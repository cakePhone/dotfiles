#!/bin/zsh

# ============================================== #
# This script was generated by Gemini 2.5 Flash. #
# ============================================== #

function get_update_status() {
    local update_count=0
    local yay_output=""
    local exit_code=0
    local status_message=""

    # Run yay -Qu, capture both stdout and stderr, and save the exit code.
    yay_output=$(yay -Qu 2>/dev/null)
    exit_code=$? # Capture the exit code immediately after yay -Qu runs

    if (( exit_code == 0 )); then
        # Exit code 0 means updates were found. Count them.
        update_count=$(echo "$yay_output" | wc -l)
        status_message="ðŸš¨ System needs an update! ($update_count packages pending)"
    elif (( exit_code == 1 )); then
        # Exit code 1 means no updates were found. This is the "up to date" case.
        update_count=0 # Explicitly set to 0 for clarity
        status_message="âœ… System is up to date."
    else
        # Exit code >1 indicates an actual error (e.g., network failure, yay not installed).
        # In this case, we default to assuming it's "up to date" as per your earlier request
        # and indicate that the query failed.
        status_message="âœ… System is up to date. (Update query failed)"
    fi

    echo "$status_message"
}
